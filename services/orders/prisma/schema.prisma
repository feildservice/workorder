// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // output   = "./prisma-client"
}

enum InvoiceStatus {
  PENDING
  PAID
  CANCELLED
}

enum RequestStatus {
  PENDING
  ACCEPTED
  WORKORDER_CREATED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model ServiceRequest {
  id          String    @id @default(auto()) @map("_id")  @db.ObjectId
  title       String
  description String
  status      RequestStatus @default(PENDING)
  location    Location? @relation(fields: [locationId], references: [id])
  locationId  String?   @db.ObjectId  @unique
  serviceType ServiceType @relation(fields: [serviceTypeId], references: [id])
  serviceTypeId String  @db.ObjectId  
  invoices    Invoice[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model ServiceType {
  id          String    @id @default(auto()) @map("_id")  @db.ObjectId
  name        String
  description String?
  workflow    Workflow[]
  requests    ServiceRequest[] 
  createdAt   DateTime @default(now())
  updatedAt   DateTime? @updatedAt
}

model Invoice {
  id          String      @id @default(auto()) @map("_id")  @db.ObjectId
  amount      Float
  status      InvoiceStatus @default(PENDING)
  request     ServiceRequest? @relation(fields: [requestId], references: [id])
  requestId   String?   @db.ObjectId 
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
}

model Workflow {
  id            String    @id @default(auto()) @map("_id")  @db.ObjectId
  serviceType   ServiceType @relation(fields: [serviceTypeId], references: [id])
  serviceTypeId String    @db.ObjectId
  steps         String[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
}
model WorkOrder {
  id          String    @id @default(auto()) @map("_id")  @db.ObjectId
  title       String
  description String
  status      String?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime? @updatedAt
}

model Location {
  id        String   @id @default(auto()) @map("_id")  @db.ObjectId
  address   String
  city      String
  state     String
  zipCode   String
  latitude  Float
  longitude Float
  ServiceRequest ServiceRequest?  
}

//Territory and Scheduling